{% extends demoLayoutStructure %}
{% set is_demo = true %}

{# ------------------------------
Variables #}

{# Just needed for our mockup of the lookup "no results" template #}
{% set character = 'ä½™' %}

{% set migaku_data = '{"character": "\u961c", "has_result": true, "stroke_count": 8, "onyomi": ["\u30d5", "\u30d5\u30a6"], "kunyomi": [], "nanori": ["\u304a\u304b"], "meanings": ["hill", "mound", "left village radical (no. 170)"], "frequency_rank": 2793, "grade": 4, "jlpt": null, "kanken": 2, "primitives": ["\ud840\udca4", "\u5341"], "primitive_of": ["\u968a", "\u967a", "\u96a0", "\u9662", "\u964d", "\u9664", "\u969b", "\u968e", "\u9632", "\u967d", "\u969c", "\u96a3", "\u9678", "\u965b", "\u9670", "\u963f", "\u9663", "\u968f", "\u9665", "\u9694", "\u963b", "\u9699", "\u962a", "\u966a", "\u9685", "\u9686", "\u5815", "\u9673", "\u9675", "\u9676", "\u9644"], "primitive_keywords": ["pinnacle"], "primitive_alternatives": ["\u961d"], "heisig_id5": 2928, "heisig_id6": 1360, "heisig_keyword5": "large hill", "heisig_keyword6": "large hill", "heisig_story": "Maestro . . . needle.", "heisig_comment": null, "radicals": ["\u2ed6", "\u5341"], "words_default": [["\u961c", "\u304a\u304b"]], "koohi_stories": ["1) [cameron_en] 7-11-2008(70): The maestro lives on top of a large hill so that he can play music at over ten decibels without anyone giving a damn.", "2) [Meconium] 13-7-2010(19): Note to those who have not got this far in the book: This is the full kanji for the Pinnacle primitive (i.e. only the left-hand version of the primitive). The full kanji for the City Walls primitive is city walls (#2180 \u9091). Beyonce went for an invigorating walk up a large hill on a summer's afternoon. Since the grass was so lush and cool, she took off her sandals and immediately stepped on a used hypodermic needle. \u5c90 \u961c\u770c\u3000\u304e\u3075\u3051\u3093 Gifu Prefecture.", "3) [chibimizuno] 7-6-2009(11): James Bond is planning a surprise attack on the enemy. He's sitting on top of a hill, overlooking where he expects the enemy to go by. He checks the hand of his watch (the needle), noting that there are ten seconds left before the enemy arrives.", "4) [Gaignun] 11-4-2011(3): Ludwig van Beethoven, the famous and famously irascible maestro, moves to the largest hill he can find in Vienna. At 10^10 feet above sea level (a ridiculously impossible height), he can compose his tenth symphony in peace. Unfortunately, death takes him before he completes it. Do not confuse with hillock (#1039 \u585a) or hill (#1329 \u4e18).", "5) [abdwef] 8-2-2009(2): James Bond carefully balanced the large hill on top of the needle."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null, "words": [], "primitives_detail": [{"character": "\ud840\udca4", "has_result": true, "stroke_count": 6, "onyomi": ["\u30bf\u30a4"], "kunyomi": [], "nanori": [], "meanings": ["to store up", "to pile up"], "frequency_rank": 999999, "grade": null, "jlpt": null, "kanken": null, "primitives": [], "primitive_of": ["\u8ffd", "\u5b98", "\u5e2b", "\u5e25", "\u961c"], "primitive_keywords": ["maestro"], "primitive_alternatives": [], "heisig_id5": null, "heisig_id6": null, "heisig_keyword5": null, "heisig_keyword6": null, "heisig_story": null, "heisig_comment": null, "radicals": ["\u53e3"], "words_default": [], "koohi_stories": [], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u5341", "has_result": true, "stroke_count": 2, "onyomi": ["\u30b8\u30e5\u30a6", "\u30b8\u30c3", "\u30b8\u30e5\u30c3"], "kunyomi": ["\u3068\u304a", "\u3068", "\u305d"], "nanori": ["\u3044", "\u304b", "\u304e", "\u3055", "\u3057", "\u305d", "\u305d\u3046", "\u3061", "\u3068\u3046", "\u306d", "\u307e", "\u308b", "\u308f"], "meanings": ["ten"], "frequency_rank": 444, "grade": 1, "jlpt": 5, "kanken": 10, "primitives": ["\u5341"], "primitive_of": ["\u65e9", "\u771f", "\u76f4", "\u8a08", "\u6e96", "\u5358", "\u8d70", "\u58ca", "\u652f", "\u53e4", "\u5354", "\u88c1", "\u8336", "\u535a", "\u8074", "\u7387", "\u5fb3", "\u5352", "\u8cca", "\u7d22", "\u8f9b", "\u61d0", "\u6597", "\u91dd", "\u55aa", "\u5351", "\u76fe", "\u6c41", "\u53f6", "\u514b", "\u5098", "\u67a0", "\u52c3", "\u8fbb", "\u961c", "\u8a0a"], "primitive_keywords": ["cross", "needle"], "primitive_alternatives": [], "heisig_id5": 10, "heisig_id6": 10, "heisig_keyword5": "ten", "heisig_keyword6": "ten", "heisig_story": "Turn this character 45 degrees either way and you have the x used for the Roman numeral <b>ten</b>.", "heisig_comment": "As a primitive, this character sometimes keeps its meaning of <i>ten</i> and sometimes signifies <i>needle</i>, this latter derived from the kanji for <i>needle</i> (Frame 292). Since the primitive is used in the kanji itself, there is no need to worry about confusing the two. In fact, we shall be following this procedure regularly.", "radicals": ["\u5341"], "words_default": [["\u5341\u5206", "\u3058\u3085\u3046\u3076\u3093"], ["\u5341\u5b57", "\u3058\u3085\u3046\u3058"], ["\u5341\u6212", "\u3058\u3063\u304b\u3044"], ["\u5341\u5091", "\u3058\u3063\u3051\u3064"], ["\u5341\u516d\u591c", "\u3044\u3056\u3088\u3044"], ["\u4e8c\u5341\u6b73", "\u306f\u305f\u3061"]], "koohi_stories": ["1) [Christine_Tham] 24-7-2007(68): Two needles crossing marks the spot, or you can use the Roman character for ten (rotated 45 degrees).", "2) [naur_caraniril] 11-10-2008(47): I scared away ten vampires with a single cross!", "3) [vgambit] 23-6-2007(23): Ten looks like a plus sign.", "4) [fernglas] 2-3-2009(21): A roman ten (X) standing on one leg.", "5) [Kaithegreat] 31-7-2009(10): T for ten."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}], "primitive_of_detail": [{"character": "\u968a", "has_result": true, "stroke_count": 12, "onyomi": ["\u30bf\u30a4"], "kunyomi": [], "nanori": [], "meanings": ["regiment", "party", "company", "squad"], "frequency_rank": 320, "grade": 4, "jlpt": 1, "kanken": 7, "primitives": ["\u961c", "\u4e37", "\u8c55"], "primitive_of": ["\u589c"], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1306, "heisig_id6": 1403, "heisig_keyword5": "regiment", "heisig_keyword6": "regiment", "heisig_story": "Pinnacle . . . animal horns . . . sow.", "heisig_comment": null, "radicals": ["\u5e76", "\u8c55", "\u2ed6"], "words_default": [["\u968a", "\u305f\u3044"], ["\u90e8\u968a", "\u3076\u305f\u3044"], ["\u968a\u9577", "\u305f\u3044\u3061\u3087\u3046"], ["\u8266\u968a", "\u304b\u3093\u305f\u3044"], ["\u8ecd\u968a", "\u3050\u3093\u305f\u3044"], ["\u968a\u54e1", "\u305f\u3044\u3044\u3093"]], "koohi_stories": ["1) [dingomick] 2-1-2007(171): Every regiment of The Pinnacle's army is lead by a Miss Piggy with a viking helmet on.", "2) [Hinode] 11-2-2009(57): Every regiment of The Pinnacle's army has an animal name. This regiment is called 'Horned Pig Regiment'. They're wearing Wiking helms and are usually cowered in mud.", "3) [tomtosh] 16-1-2008(22): As the only female in her police regiment, Officer Pinnacle often endures sexist remarks from the horny male pigs she has to work with.", "4) [stupiddog] 12-10-2009(13): After fleeing from horny miss piggy who tried to consummate (#540 \u9042), Kermit is now sitting on the pinnacle. But not for long, because Miss Piggy and her regiment are launching their assault!", "5) [brian44] 6-12-2007(7): Here we have a Pinnacle full of Horny Piggies to mean REGIMENT. Well, just the elements and shape give it away. The very lurid details that don\u2019t need to be mentioned are always involved with REGIMENTS. They work very hard to get to the Pinnacle to get the high land and on the way, they act as though they are just Horny Piggies that rape and take away everything."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u967a", "has_result": true, "stroke_count": 11, "onyomi": ["\u30b1\u30f3"], "kunyomi": ["\u3051\u308f.\u3057\u3044"], "nanori": [], "meanings": ["precipitous", "inaccessible place", "impregnable position", "steep place", "sharp eyes"], "frequency_rank": 356, "grade": 5, "jlpt": 3, "kanken": 6, "primitives": ["\u961c", "\u50c9"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1672, "heisig_id6": 1802, "heisig_keyword5": "precipitous", "heisig_keyword6": "precipitous", "heisig_story": "Pinnacle . . . awl.", "heisig_comment": null, "radicals": ["\u53e3", "\u4eba", "\ud840\udda2", "\u2ed6"], "words_default": [["\u5371\u967a", "\u304d\u3051\u3093"], ["\u5192\u967a", "\u307c\u3046\u3051\u3093"], ["\u4fdd\u967a", "\u307b\u3051\u3093"], ["\u967a\u3057\u3044", "\u3051\u308f\u3057\u3044"], ["\u967a\u60aa", "\u3051\u3093\u3042\u304f"], ["\u9670\u967a", "\u3044\u3093\u3051\u3093"]], "koohi_stories": ["1) [dingomick] 10-9-2007(203): The edge of The Pinnacle is precipitous, so they have a guard posted with an ice pick to poke people and keep them from the edge.", "2) [fuaburisu] 18-6-2006(30): Well I have someone climbing an inflatable precipitous pinnacle. Once at the top it is so precipitous that the person is afraid to climb down and instead punctures the inflatable pinnacle with an awl to get safely and slowly back to the ground.", "3) [Floatingweed5] 28-11-2007(23): Frankenstein is chased by the villagers up to the precipitous edge of the pinnacle. (ref 1671 astridtops).", "4) [dihutenosa] 16-5-2008(19): The Ice Climbers enjoy precipitous climbs - and what better place to climb than the precipitous Pinnacle!", "5) [MeisterLlama] 8-4-2009(14): The rock climber trying to get up to the pinnacle is dangling from a precipitous edge, hanging only one with his icepick."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u96a0", "has_result": true, "stroke_count": 14, "onyomi": ["\u30a4\u30f3", "\u30aa\u30f3"], "kunyomi": ["\u304b\u304f.\u3059", "\u304b\u304f.\u3057", "\u304b\u304f.\u308c\u308b", "\u304b\u304b.\u3059", "\u3088.\u308b"], "nanori": ["\u304a", "\u304c\u304f\u3057"], "meanings": ["conceal", "hide", "cover"], "frequency_rank": 357, "grade": 8, "jlpt": 1, "kanken": 4, "primitives": ["\u961c", "\u722a", "\u30e8", "\u5fc3"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1313, "heisig_id6": 1410, "heisig_keyword5": "conceal", "heisig_keyword6": "conceal", "heisig_story": "<i>Pinnacle</i> . . . <i>vulture</i> . . . <i>broom</i> . . . <i>heart</i>. Compare the element sat the right to the kanji for <i>calm</i> (Frame 1230).", "heisig_comment": null, "radicals": ["\u30ce", "\u30e8", "\u2e8c", "\u5fc3", "\u2ed6"], "words_default": [["\u96a0\u3059", "\u304b\u304f\u3059"], ["\u96a0\u308c\u308b", "\u304b\u304f\u308c\u308b"], ["\u96a0\u3057\u4e8b", "\u304b\u304f\u3057\u3054\u3068"], ["\u96a0\u308c\u5bb6", "\u304b\u304f\u308c\u304c"], ["\u96a0\u305b\u308b", "\u304b\u304f\u3059"], ["\u96a0", "\u304b\u304f\u308c"]], "koohi_stories": ["1) [dingomick] 27-8-2007(168): The wheat farmer's heart is calm (#1147 \u7a4f) about the eagle not stealing his crops because of the broom scarecrow. But he still conceals all his wheat at The Pinnacle in case anyone else trys to steal it.", "2) [esaulgd] 11-1-2008(85): Move the broom with a vulture perched on top, and you'll find the concealed entrance to the heart of The Pinnacle.", "3) [stehr] 24-10-2007(24): People of the pinnacle learned to conceal their nature with calm demeanors, though in their hearts they are vultures and witches (broom).", "4) [etpan] 18-1-2009(14): Kiki is back on her broom, she's being chased by vultures and she's trying to conceal herself. Her heart is still pounding, but instead of landing in a corn field, she decides to fly up to the pinnacle of the city.", "5) [SammyB] 20-8-2008(9): Many treasures are concealed within the acropolis. Which is why it is guarded by vultures perched on brooms, ready to peck out your heart if you try to sneak in and steal them."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u9662", "has_result": true, "stroke_count": 10, "onyomi": ["\u30a4\u30f3"], "kunyomi": [], "nanori": [], "meanings": ["Inst.", "institution", "temple", "mansion", "school"], "frequency_rank": 384, "grade": 3, "jlpt": 4, "kanken": 8, "primitives": ["\u961c", "\u5b8c"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1304, "heisig_id6": 1401, "heisig_keyword5": "Inst.", "heisig_keyword6": "Inst.", "heisig_story": "This key word, the abbreviation for <b>Institution</b>, represents the use of that word as a suffix affixed to certain buildings and organizations. Its primitive elements: <i>pinnacle</i> . . . <i>perfect</i>.", "heisig_comment": null, "radicals": ["\u4e8c", "\u513f", "\u5b80", "\u2ed6", "\u5143"], "words_default": [["\u75c5\u9662", "\u3073\u3087\u3046\u3044\u3093"], ["\u9662", "\u3044\u3093"], ["\u5165\u9662", "\u306b\u3085\u3046\u3044\u3093"], ["\u9000\u9662", "\u305f\u3044\u3044\u3093"], ["\u9662\u9577", "\u3044\u3093\u3061\u3087\u3046"], ["\u4e0a\u9662", "\u3058\u3087\u3046\u3044\u3093"]], "koohi_stories": ["1) [dingomick] 7-3-2007(163): The Institution of The Pinnacle is perfect in every way. It is the new House of God, his chosen city.", "2) [meolox] 22-2-2008(79): To reach the pinnacle of kanji perfect you need to attend the Heisig Inst.", "3) [Viking101] 8-1-2010(28): The Inst. of Kanji.Koohii. It's where we all try to get to the pinnacle of Japanese by perfecting our kanji writing skills.", "4) [kanjiknight] 15-1-2009(18): The Astronomical Inst. at The Pinnacle is the perfect institute to study stars as nothing blocks the view at that height. \u75c5\u9662 \u3073\u3087\u3046\u3044\u3093 hospital.", "5) [kodama] 16-10-2007(17): The Acropolis is the perfect place for an Institute to study Ancient Greece."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u964d", "has_result": true, "stroke_count": 10, "onyomi": ["\u30b3\u30a6", "\u30b4"], "kunyomi": ["\u304a.\u308a\u308b", "\u304a.\u308d\u3059", "\u3075.\u308b", "\u3075.\u308a", "\u304f\u3060.\u308b", "\u304f\u3060.\u3059"], "nanori": ["\u3075\u308a", "\u3075\u308b"], "meanings": ["descend", "precipitate", "fall", "surrender"], "frequency_rank": 506, "grade": 6, "jlpt": 3, "kanken": 5, "primitives": ["\u961c", "\u6535", "\u30f0"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1308, "heisig_id6": 1405, "heisig_keyword5": "descend", "heisig_keyword6": "descend", "heisig_story": "<i>Pinnacle</i> . . . <i>walking legs</i> . . . <i>sunglasses with a lens popped out</i>. Distinguish from <i>fall</i> (Frame 320) and <i>crash</i>, which we considered in the previous frame.", "heisig_comment": null, "radicals": ["\u5902", "\u2ed6", "\u5341"], "words_default": [["\u964d\u308a\u308b", "\u304a\u308a\u308b"], ["\u964d\u308b", "\u3075\u308b"], ["\u964d\u308d\u3059", "\u304a\u308d\u3059"], ["\u4ee5\u964d", "\u3044\u3053\u3046"], ["\u964d\u4f0f", "\u3053\u3046\u3075\u304f"], ["\u964d\u53c2", "\u3053\u3046\u3055\u3093"]], "koohi_stories": ["1) [wingedge] 22-12-2007(207): 'Sunglasses-missing-one-lens' is obviously the monocle. The proper, high-class way to descend The Pinnacle is wearing a monocle with your walking legs splayed to a full gentlemanly stride.", "2) [Megaqwerty] 30-5-2007(33): After a cool, hip businessman angered the executives at The Pinnacle, they beat him up, popping out a lens from his sunglasses, and tossed out the window, head first, walking legs second. One executive later commented, 'It was like he was descending into Hell from Heaven!'.", "3) [dingomick] 2-1-2007(27): To descend from The Pinnacle you must walk down the stairs with your sunglasses-missing-one-lense on.", "4) [SammyB] 27-8-2008(18): Used in \u964d\u308a\u308b \u3010\u304a\u308a\u308b\u3011\uff08to alight or get off - e.g. from a bus). So here we have a tour bus arriving at the acropolis: Everyone descends from the bus, stretches their walking legs and puts on their monocles. (EDIT: fixed up primitives).", "5) [mikedough2] 24-1-2008(16): A Yakuza member descending down from the pinnacle with limping walking legs and a lens from his sunglasses missing. He tried to break into the resort but the security threw him out."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u9664", "has_result": true, "stroke_count": 10, "onyomi": ["\u30b8\u30e7", "\u30b8"], "kunyomi": ["\u306e\u305e.\u304f", "-\u3088.\u3051"], "nanori": [], "meanings": ["exclude", "division (x/3)", "remove", "abolish", "cancel", "except"], "frequency_rank": 604, "grade": 6, "jlpt": 3, "kanken": 5, "primitives": ["\u961c", "\u4f59"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1658, "heisig_id6": 1787, "heisig_keyword5": "exclude", "heisig_keyword6": "exclude", "heisig_story": "Pinnacle . . . scale.", "heisig_comment": null, "radicals": ["\u79be", "\ud840\udda2", "\u2ed6"], "words_default": [["\u6383\u9664", "\u305d\u3046\u3058"], ["\u89e3\u9664", "\u304b\u3044\u3058\u3087"], ["\u6392\u9664", "\u306f\u3044\u3058\u3087"], ["\u524a\u9664", "\u3055\u304f\u3058\u3087"], ["\u9664\u304f", "\u306e\u305e\u304f"], ["\u53d6\u308a\u9664\u304f", "\u3068\u308a\u306e\u305e\u304f"]], "koohi_stories": ["1) [dingomick] 10-9-2007(245): To become a member of The Pinnacle, they test you on a scale. If you weigh too much, they exclude you.", "2) [CharleyGarrett] 28-11-2006(69): You won't make it unless you exclude something. The climb to the pinacle cannot be completed if you are carrying too much. You just have to decide what you can afford to exclude.", "3) [Copycatken] 13-5-2009(16): Before entering The Pinnacle, one must be weighed on a scale. The authorities have to exclude anyone who is over 300 pds since their weight might damage the floor.", "4) [Harrow] 17-5-2009(6): Officials at the Acropolis exclude access to vehicles that weigh too much. Some gate staff also apply this to people (generally Americans) who weigh over 250 lbs.", "5) [Virtua_Leaf] 2-10-2009(4): (insert fat celeb here) is excluded at The Pinnacle because he/she weighs too much."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u969b", "has_result": true, "stroke_count": 14, "onyomi": ["\u30b5\u30a4"], "kunyomi": ["\u304d\u308f", "-\u304e\u308f"], "nanori": ["\u308f"], "meanings": ["occasion", "side", "edge", "verge", "dangerous", "adventurous", "indecent", "time", "when"], "frequency_rank": 607, "grade": 5, "jlpt": 3, "kanken": 6, "primitives": ["\u961c", "\u796d"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1296, "heisig_id6": 1392, "heisig_keyword5": "occasion", "heisig_keyword6": "occasion", "heisig_story": "Pinnacle . . . ritual.", "heisig_comment": null, "radicals": ["\u30ce", "\u793a", "\u4e8c", "\u5c0f", "\u7676", "\u2ed6"], "words_default": [["\u5b9f\u969b", "\u3058\u3063\u3055\u3044"], ["\u969b", "\u3055\u3044"], ["\u56fd\u969b", "\u3053\u304f\u3055\u3044"], ["\u4ea4\u969b", "\u3053\u3046\u3055\u3044"], ["\u624b\u969b", "\u3066\u304e\u308f"], ["\u5206\u969b", "\u3076\u3093\u3056\u3044"]], "koohi_stories": ["1) [radical_tyro] 26-6-2007(194): On occasian, rituals are held at the very tip of The Pinnacle.", "2) [mspertus] 4-9-2006(68): Many rituals are practiced every day (blessing before meals, evening prayer, etc.) Only the peak rituals (wedding, Bar Mitzvah, etc.) qualify to be called an occasion.", "3) [dingomick] 5-2-2007(36): The international penis matsuri at The Pinnacle is the biggest occasion of the year.", "4) [rtkrtk] 21-2-2008(19): Wordplay (occastion-&gt;caucasian). The Pinnacle is a whites-only community, and is a favorite place for white-supremacy rituals. The motto of the Pinnacle: 'the best in caucasian occasions'.", "5) [Perry] 22-1-2009(14): They usually do the A-ritual, but on a special occasion they do the B-ritual."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u968e", "has_result": true, "stroke_count": 12, "onyomi": ["\u30ab\u30a4"], "kunyomi": ["\u304d\u3056\u306f\u3057"], "nanori": ["\u3057\u306a", "\u3068", "\u306f\u3057"], "meanings": ["storey", "stair", "counter for storeys of a building"], "frequency_rank": 670, "grade": 3, "jlpt": 2, "kanken": 8, "primitives": ["\u961c", "\u7686"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1309, "heisig_id6": 1406, "heisig_keyword5": "story", "heisig_keyword6": "story", "heisig_story": "The <b>story</b> of this character refers to floors in a building. The elements: <i>pinnacle</i> . . . <i>all</i>.", "heisig_comment": null, "radicals": ["\u767d", "\u6bd4", "\u2ed6"], "words_default": [["\u968e", "\u304b\u3044"], ["\u968e\u6bb5", "\u304b\u3044\u3060\u3093"], ["\u6bb5\u968e", "\u3060\u3093\u304b\u3044"], ["\u968e\u7d1a", "\u304b\u3044\u304d\u3085\u3046"], ["\u968e", "\u304d\u3056\u306f\u3057"], ["\u968e\u4e0b", "\u304b\u3044\u304b"]], "koohi_stories": ["1) [dingomick] 5-2-2007(205): All buildings of The Pinnacle are multi-storey. They don't have much room, so they have to build up. It sucks when someone presses all the buttons on the elevator! You have to stop at each storey!", "2) [Spidercat] 25-2-2008(81): Some stupid kid has pushed all the buttons in the elevator. As it stops at all storeys you reach a pinnacle of impatience. Finally you reach your storey, the last one, at the pinnacle of the building.", "3) [b0ng0] 4-2-2009(42): The pinnacle of a building is the sum of all the storeys.", "4) [cbogart] 14-12-2006(11): The second storey of the acropolis is the Laundrymopolis, where the elite Greeks meet to compare the whiteness of their sheets.", "5) [Jaunty] 7-8-2009(9): You're taking the elevator up to the pinnacle, and someone presses all the buttons, making everyone wait while it stops at every storey (thanks dingomick)."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u9632", "has_result": true, "stroke_count": 7, "onyomi": ["\u30dc\u30a6"], "kunyomi": ["\u3075\u305b.\u3050"], "nanori": ["\u3042\u305f", "\u3046", "\u307b\u3046"], "meanings": ["ward off", "defend", "protect", "resist"], "frequency_rank": 671, "grade": 5, "jlpt": 2, "kanken": 6, "primitives": ["\u961c", "\u65b9"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1302, "heisig_id6": 1399, "heisig_keyword5": "ward off", "heisig_keyword6": "ward off", "heisig_story": "Pinnacle . . . compass.", "heisig_comment": null, "radicals": ["\u65b9", "\u2ed6"], "words_default": [["\u9632\u885b", "\u307c\u3046\u3048\u3044"], ["\u9632\u3050", "\u3075\u305b\u3050"], ["\u6d88\u9632", "\u3057\u3087\u3046\u307c\u3046"], ["\u9632\u5fa1", "\u307c\u3046\u304e\u3087"], ["\u9632\u72af", "\u307c\u3046\u306f\u3093"], ["\u56fd\u9632", "\u3053\u304f\u307c\u3046"]], "koohi_stories": ["1) [dingomick] 5-2-2007(207): A giant compass is The Pinnacle's self-defense system. It points in the direction of any invaders so the city is prepared well ahead to ward off the intruders.", "2) [Johan] 28-4-2006(68): To ward off enemies, the ancient Greece kept watch from the Acropolis, where they had a clear view in all directions.", "3) [jabberwockychortles] 28-5-2009(58): On the pinnacle you can see in every direction and can ward off attacks or invasions.", "4) [ivoSF] 26-9-2006(11): In the anime naruto, Neji Hyuga uses 2 techniques Byakugan and the Hakkesh\u014d Kaiten to ward of any atack from any direction, the pinnacle of warding off.", "5) [sgrant] 5-12-2008(8): The Pinnacle hotel employs cutting-edge technology to ward off spirits. They even have detectors that can tell you which direction the spirits are coming from."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u967d", "has_result": true, "stroke_count": 12, "onyomi": ["\u30e8\u30a6"], "kunyomi": ["\u3072"], "nanori": ["\u3042\u304d", "\u3042\u304d\u3089", "\u3042\u3051", "\u306f\u308b", "\u3072\u308d", "\u3084\u3093", "\u3088"], "meanings": ["sunshine", "yang principle", "positive", "male", "heaven", "daytime"], "frequency_rank": 751, "grade": 3, "jlpt": 3, "kanken": 8, "primitives": ["\u961c", "\u661c"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1300, "heisig_id6": 1397, "heisig_keyword5": "sunshine", "heisig_keyword6": "sunshine", "heisig_story": "Different from the primitive for <i>sun</i> (which figures in the character) and the kanji for <i>ray</i> (Frame 125), the key word <b>sunshine</b> is meant to convey the meaning of the masculine principle in nature, or \"Yang.\" (The dark is viewed mythically as the feminine principle; see frame 1718.) From there it comes to mean <i>sun</i> also. The elements are: <i>pinnacle</i> . . . <i>piggy bank</i>.", "heisig_comment": null, "radicals": ["\u4e00", "\u65e5", "\u52ff", "\u2ed6"], "words_default": [["\u592a\u967d", "\u305f\u3044\u3088\u3046"], ["\u967d", "\u3072"], ["\u967d\u6c17", "\u3088\u3046\u304d"], ["\u967d\u6027", "\u3088\u3046\u305b\u3044"], ["\u9670\u967d", "\u304a\u3093\u3088\u3046"], ["\u967d\u52d5", "\u3088\u3046\u3069\u3046"]], "koohi_stories": ["1) [fuaburisu] 21-1-2006(191): A kid is perched on a pinnacle with his piggy bank. He uses the coins to catch the sunshine, and redirect it into people's eyes, far below.", "2) [dingomick] 5-2-2007(77): The Pinnacle is environmentally friendly. They collect solar power through sunshine on their piggybank shaped solar arrays.", "3) [gibosi] 10-1-2007(65): At the Pinnacle, they use solar collectors, sun piggy banks, if you will, to capture the sunlight.", "4) [Howdoken] 13-4-2008(30): Mario SUNSHINE: collect enough shines to fill the PIGGY-BANK and the sunshine will issue forth from THE PINNACLE of Isle Delphino.", "5) [bihzad] 19-3-2008(30): The pinnacle catches the sunshine like a piggy bank catches coins."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u969c", "has_result": true, "stroke_count": 14, "onyomi": ["\u30b7\u30e7\u30a6"], "kunyomi": ["\u3055\u308f.\u308b"], "nanori": [], "meanings": ["hinder", "hurt", "harm"], "frequency_rank": 863, "grade": 6, "jlpt": 1, "kanken": 5, "primitives": ["\u961c", "\u7ae0"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1297, "heisig_id6": 1393, "heisig_keyword5": "hinder", "heisig_keyword6": "hinder", "heisig_story": "Pinnacle . . . badge.", "heisig_comment": null, "radicals": ["\u97f3", "\u5341", "\u65e5", "\u7acb", "\u2ed6"], "words_default": [["\u969c\u5bb3", "\u3057\u3087\u3046\u304c\u3044"], ["\u6545\u969c", "\u3053\u3057\u3087\u3046"], ["\u4fdd\u969c", "\u307b\u3057\u3087\u3046"], ["\u969c\u308b", "\u3055\u308f\u308b"], ["\u652f\u969c", "\u3057\u3057\u3087\u3046"], ["\u76ee\u969c\u308a", "\u3081\u3056\u308f\u308a"]], "koohi_stories": ["1) [dingomick] 5-2-2007(177): The officer at the gate to The Pinnacle with a giant badge sewn to his chest hinders all visitors. But not the handicapped. They're hindered enough already. They're given a badge and can pass right into The Pinnacle.", "2) [Soseki] 27-2-2008(65): The pinnacle of racism was that of the Nazis. They made the Jews wear a badge on their clothes to identify them. They hindered their every movement. Moreover the peace-loving Dutch all wore the badges so that the Jews would be unidentifiable. Effectively hindering the Nazi plot.", "3) [Wosret] 15-11-2008(50): At the pinnacle I was awarded a badge so big that it hinders my movement.", "4) [nadiatims] 8-2-2008(15): Getting to the PINNACLE of mount fuji is full of hinderances and you don't even get a BADGE at the top.", "5) [Meconium] 24-4-2009(10): When you visit The Pinnacle, they are so keen to make sure everyone knows who lives there and who's just visiting, so they force you to wear a massive badge that reaches from your neck to your knees, and hinders your movement substantially."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u96a3", "has_result": true, "stroke_count": 16, "onyomi": ["\u30ea\u30f3"], "kunyomi": ["\u3068\u306a.\u308b", "\u3068\u306a\u308a"], "nanori": ["\u3061\u304b"], "meanings": ["neighboring"], "frequency_rank": 894, "grade": 8, "jlpt": 1, "kanken": 4, "primitives": ["\u961c", "\u7c73", "\u821b"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1311, "heisig_id6": 1408, "heisig_keyword5": "neighboring", "heisig_keyword6": "neighboring", "heisig_story": "Pinnacle . . . rice . . . sunglasses.", "heisig_comment": null, "radicals": ["\u821b", "\u7c73", "\u5915", "\u2ed6"], "words_default": [["\u96a3", "\u3068\u306a\u308a"], ["\u96a3\u4eba", "\u308a\u3093\u3058\u3093"], ["\u8fd1\u96a3", "\u304d\u3093\u308a\u3093"], ["\u96a3\u753a", "\u3068\u306a\u308a\u307e\u3061"], ["\u96a3\u308a\u5408\u308f\u305b", "\u3068\u306a\u308a\u3042\u308f\u305b"], ["\u96a3\u63a5", "\u308a\u3093\u305b\u3064"]], "koohi_stories": ["1) [decamer0n] 26-5-2007(229): America thinks it is the pinnacle of the world, looking down on all neighboring countries through its mirrored, aviator sunglasses.", "2) [desmidus] 30-3-2008(184): All the neighboring communities to the Pinnacle have a major problem. The kids at the Pinnacle have a habit of throwing down rice from the city walls in all directions, so people in neighboring communities are forced to wear sunglasses all the time in order to avoid getting rice in their eyes.", "3) [Katsuo] 14-2-2008(55): Tip: rice + sunglasses : In RTK3 Heisig names this combination 'shoeshine'. It also appears in: sympathize with (#2051 \u6190), phosphorus (#2052 \u71d0), camelopard (#2053 \u9e9f), scaled (#2054 \u9c57). Story: You visit the Acropolis and are amazed to see the guy from your neighboring house back home working there as a shoeshiner.", "4) [koohiikun] 23-4-2009(32): Tom Cruise (American with sunglasses) tried to get admitted to The Pinnacle but, with all the weird press, he was rejected and so now lives in a neighboring Scientology exclusive gated community.", "5) [dingomick] 5-2-2007(19): The Pinnacle's neighboring mount is a place where they grow rice. They wear sunglasses since it's the sun's glare is so strong there."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u9678", "has_result": true, "stroke_count": 11, "onyomi": ["\u30ea\u30af", "\u30ed\u30af"], "kunyomi": ["\u304a\u304b"], "nanori": ["\u304f\u304c", "\u305f\u3061", "\u307f\u3061", "\u3080", "\u3080\u3064"], "meanings": ["land", "six"], "frequency_rank": 911, "grade": 4, "jlpt": 2, "kanken": 7, "primitives": ["\u961c", "\u5725", "\u571f"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1513, "heisig_id6": 1631, "heisig_keyword5": "land", "heisig_keyword6": "land", "heisig_story": "rice seedling As we mentioned back in FRAME 234 \u82d7, rice seedlings get an element all their own: soil and man legs becomes an ideograph of the spikelets of rice bunched together for implanting in the muddy soil of the paddy. [5]", "heisig_comment": null, "radicals": ["\u571f", "\u513f", "\u2ed6"], "words_default": [["\u7740\u9678", "\u3061\u3083\u304f\u308a\u304f"], ["\u9678\u8ecd", "\u308a\u304f\u3050\u3093"], ["\u5927\u9678", "\u305f\u3044\u308a\u304f"], ["\u4e0a\u9678", "\u3058\u3087\u3046\u308a\u304f"], ["\u9678", "\u308a\u304f"], ["\u96e2\u9678", "\u308a\u308a\u304f"]], "koohi_stories": ["1) [fiminor] 11-4-2006(162): My rice-seedlings have become sentient and will go on a mission. I can only apologise for the next 6 frames. In the distance, there is a pinnacle, which the newly-awakened rice-seedlings who are still stuck in the ground can see. Could it be the Promised Land?", "2) [astridtops] 23-7-2006(90): When sailors see land in the distance, they first see the pinnacles of the new land, but when they come close enough they'll be able to make out the rice seedlings, and finally the ground!", "3) [tharvey] 23-7-2009(70): (\u5725 is the rare kanji for a mushroom. Sticking out of the ground like little knubby legs, it's pretty easy to remember.) Story ~ The land around The Pinnacle has mushrooms covering the ground.", "4) [Nuriko] 19-3-2008(46): Primitive: Soil covered human legs is the result of planting rice seedlings into rice paddies all day. Poor rice farmers!", "5) [nagisa] 4-2-2008(32): The Pinnacle's land is so valuable that they cannot afford to let a single rice seedling be planted in the soil."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u965b", "has_result": true, "stroke_count": 10, "onyomi": ["\u30d8\u30a4"], "kunyomi": [], "nanori": [], "meanings": ["highness", "steps (of throne)"], "frequency_rank": 928, "grade": 6, "jlpt": 1, "kanken": 5, "primitives": ["\u961c", "\u6bd4", "\u571f"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1310, "heisig_id6": 1407, "heisig_keyword5": "highness", "heisig_keyword6": "highness", "heisig_story": "This key word indicates a title of address to royalty. Its elements: <i>pinnacle</i> . . . <i>compare</i> . . . <i>ground</i>.", "heisig_comment": null, "radicals": ["\u571f", "\u6bd4", "\u2ed6"], "words_default": [["\u965b\u4e0b", "\u3078\u3044\u304b"]], "koohi_stories": ["1) [Copycatken] 6-9-2006(196): Your highness is the pinnacle of finesse compared to all of us commoners who are but like dirt on the ground.", "2) [desmidus] 30-3-2008(113): His Highness, the main man at the Pinnacle, often compares those who live outside the city's walls to dirt.", "3) [dingomick] 5-2-2007(33): One of the many talents of the highness of The Pinnacle is his astounding knowledge of soils. He can compare any two soil samples brought to him.", "4) [zazen666] 10-10-2007(9): We search high (pinnacle) and low(ground), and nothing compares to your highness!", "5) [cameron_en] 13-10-2008(5): 'You're nothing but dirt when compared to me' said His Highness of The Pinnacle."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u9670", "has_result": true, "stroke_count": 11, "onyomi": ["\u30a4\u30f3"], "kunyomi": ["\u304b\u3052", "\u304b\u3052.\u308b"], "nanori": [], "meanings": ["shade", "yin", "negative", "sex organs", "secret", "shadow"], "frequency_rank": 1099, "grade": 8, "jlpt": 1, "kanken": 4, "primitives": ["\u961c", "\u4eca", "\u4e91"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1592, "heisig_id6": 1718, "heisig_keyword5": "shade", "heisig_keyword6": "shade", "heisig_story": "Just as the <i>sunshine</i> (Frame 1397) represents the masculine principle in nature (Yang), the <b>shade</b> stands for the feminine principle (Yin). Its elements are: <i>pinnacle</i> . . . <i>clock</i> . . . <i>rising cloud</i>.", "heisig_comment": null, "radicals": ["\u4e8c", "\ud840\udda2", "\u53b6", "\u2ed6"], "words_default": [["\u304a\u9670", "\u304a\u304b\u3052"], ["\u9670", "\u304b\u3052"], ["\u9670\u8b00", "\u3044\u3093\u307c\u3046"], ["\u65e5\u9670", "\u3072\u304b\u3052"], ["\u9670\u53e3", "\u304b\u3052\u3050\u3061"], ["\u9670\u967d", "\u304a\u3093\u3088\u3046"]], "koohi_stories": ["1) [dingomick] 6-3-2007(238): The only shade at The Pinnacle is in the shadow of the giant clock tower, or from a rising cloud.", "2) [sutebun] 26-2-2008(40): Frosty the snowman is running around the pinnacle, staying in the shade. As he looks at his clock to see how much longer he can last, small clouds rise (steam) from his body. Nooo, Frosty!", "3) [CountPacula] 31-7-2008(33): The pinnacle is in the shade, because it has now become cloudy.", "4) [findus] 4-6-2009(24): To avoid the confusion with shadow (#1712 \u5f71), let's use a rhyme : At The Pinnacle, the only shade / is that of thinks that are man-made (The giant clock tower, and the rising cloud from a factory).", "5) [sulris] 10-3-2011(18): You are now 75% of the way through the 2136 joyo kanji!"], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": "Things that cast SHADE: the PINNACLE, a CLOCK tower, and of course a RISING CLOUD."}, {"character": "\u963f", "has_result": true, "stroke_count": 8, "onyomi": ["\u30a2", "\u30aa"], "kunyomi": ["\u304a\u3082\u306d.\u308b", "\u304f\u307e"], "nanori": ["\u307b\u3068\u308a", "\u3042\u305a", "\u3042\u308f", "\u304a\u304b", "\u304d\u305f", "\u306a"], "meanings": ["Africa", "flatter", "fawn upon", "corner", "nook", "recess"], "frequency_rank": 1170, "grade": 9, "jlpt": 1, "kanken": 1.5, "primitives": ["\u961c", "\u53ef"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1295, "heisig_id6": 1391, "heisig_keyword5": "Africa", "heisig_keyword6": "Africa", "heisig_story": "This kanji, an abbreviation for <b>Africa</b>, is now used chiefly for its sound, \"a,\" not unlike the kanji for <i>Italy</i> and the sound \"i\" that we met earlier (Frame 1245). Its composite elements are: <i>pinnacles</i> . . . <i>can</i>.", "heisig_comment": null, "radicals": ["\u4e00", "\u53e3", "\u4e85", "\u2ed6"], "words_default": [["\u963f\u5b57", "\u3042\u3058"], ["\u5357\u7121\u963f\u5f25\u9640\u4ecf", "\u306a\u3080\u3042\u307f\u3060\u3076\u3064"], ["\u963f\u5446", "\u3042\u307b\u3046"], ["\u963f\u6bd8", "\u3042\u3073"], ["\u963f\u543d", "\u3042\u3046\u3093"], ["\u963f\u5f62", "\u3042\u304e\u3087\u3046"]], "koohi_stories": ["1) [dingomick] 5-2-2007(255): Can you see Africa from The Pinnacle? I can! I can!", "2) [alreadytaken] 11-5-2008(79): A kinda pictogram: 'BoT', the first 3 letters in 'Botswana' an African country.", "3) [saizen] 26-8-2008(43): At the pinnacle of the Mt. Kilmanjaro imagine Chaka Zulu (famous African war commander) yelling at his troops, 'are you an Afri-'can' or an Afri'can't?!' To get the pumped up for the next battle.", "4) [Perry] 18-4-2010(16): It B-can in Afrikakakakaka\u2026", "5) [bihzad] 19-3-2008(10): You can see all of Africa if you can climb to its pinnacle, Kilimanjaro. 'Can you see all of Africa now? Yes, I can.'."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u9663", "has_result": true, "stroke_count": 10, "onyomi": ["\u30b8\u30f3"], "kunyomi": [], "nanori": [], "meanings": ["camp", "battle array", "ranks", "position", "sudden", "brief time"], "frequency_rank": 1196, "grade": 8, "jlpt": 1, "kanken": 4, "primitives": ["\u961c", "\u8eca"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1305, "heisig_id6": 1402, "heisig_keyword5": "camp", "heisig_keyword6": "camp", "heisig_story": "Pinnacle . . . car.", "heisig_comment": null, "radicals": ["\u8eca", "\u2ed6"], "words_default": [["\u9663", "\u3058\u3093"], ["\u9663\u75db", "\u3058\u3093\u3064\u3046"], ["\u9663\u55b6", "\u3058\u3093\u3048\u3044"], ["\u51fa\u9663", "\u3057\u3085\u3064\u3058\u3093"], ["\u672c\u9663", "\u307b\u3093\u3058\u3093"], ["\u6575\u9663", "\u3066\u304d\u3058\u3093"]], "koohi_stories": ["1) [stehr] 29-9-2007(155): Paparazzi make camp outside of The Pinnacle in their cars, waiting for the celebs to come out.", "2) [Hinode] 11-2-2009(117): Note: This kanji is most often used in a military context. Story: Here we see an encampment of military vehicles laying siege to The Pinnacle. With other countries being envious of the perfect life they lead there that makes sense. Fortunately, the pinnacle knows how to ward off (#1302 \u9632) enemies.", "3) [CharleyGarrett] 3-5-2007(45): At the pinnacle of Mt. Everest, you can camp, but you cannot find a parking place for your car!", "4) [captal] 27-5-2008(5): My grandparents think the pinnacle of cars is to have an RV camper- they go everywhere in one.", "5) [tritonxg] 11-3-2010(4): [FR]campement N1 JIN k&amp;k:1404 pinacle+v\u00e9hicule campement de gitans :  ils ont port\u00e9 au PINACLE ce mode de vie dans un VEHICULE appel\u00e9 roulotte \u9663\u5f62 \u3010\u3058\u3093\u3051\u3044\u3011military formation \u672c\u9663 \u3010\u307b\u3093\u3058\u3093\u3011troop headquarters \u9663\u5730 \u3010\u3058\u3093\u3061\u3011position \u5e03\u9663 \u3010\u3075\u3058\u3093\u3011battle formation \u9000\u9663 \u3010\u305f\u3044\u3058\u3093\u3011retreat \u5148\u9663 \u3010\u305b\u3093\u3058\u3093\u3011vanguard \u9663\u7acb\u3066 \u3010\u3058\u3093\u3060\u3066\u3011battle formation \u8ecd\u9663 \u3010\u3050\u3093\u3058\u3093\u3011battlefield \u5805\u9663 \u3010\u3051\u3093\u3058\u3093\u3011stronghold \u9663\u55b6 \u3010\u3058\u3093\u3048\u3044\u3011camp."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u968f", "has_result": true, "stroke_count": 12, "onyomi": ["\u30ba\u30a4"], "kunyomi": ["\u307e\u306b\u307e.\u306b", "\u3057\u305f\u304c.\u3046"], "nanori": [], "meanings": ["follow", "though", "notwithstanding", "while", "during", "both", "all", "obey", "submit to", "comply", "at the mercy of (the waves)"], "frequency_rank": 1318, "grade": 8, "jlpt": 1, "kanken": 3, "primitives": ["\u961c", "\u6709", "\u8fb6"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1298, "heisig_id6": 1395, "heisig_keyword5": "follow", "heisig_keyword6": "follow", "heisig_story": "Pinnacle . . . possess . . . road.", "heisig_comment": null, "radicals": ["\u30ce", "\u4e00", "\u6708", "\ufa66", "\u2ed6"], "words_default": [["\u968f\u5206", "\u305a\u3044\u3076\u3093"], ["\u968f\u4e00", "\u305a\u3044\u3044\u3061"], ["\u968f\u6642", "\u305a\u3044\u3058"], ["\u4e0d\u968f", "\u3075\u305a\u3044"], ["\u968f\u610f", "\u305a\u3044\u3044"], ["\u968f\u884c", "\u305a\u3044\u3053\u3046"]], "koohi_stories": ["1) [misha] 25-10-2007(137): [Image: Follow the 'Yellow-Brick Road' to success] The pinnacle signifies your personal goal and destination. What you're seeking to possess lies at the end of the yellow-brick road. You must follow the road to get what you want.", "2) [pjhoover] 17-6-2008(82): This story is about lemmings. when the first takes a road that falls off a pinnacle, the rest follow as if possessed.", "3) [dingomick] 17-4-2007(72): I fled to The Pinnacle for safety, but the demon followed me right up the road!", "4) [b0ng0] 4-2-2009(51): Those who possess a map of the road to the pinnacle are the best people to follow.", "5) [dimi3] 17-6-2009(24): You want to go to The Pinnacle? If you possess a pass, follow this road."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u9665", "has_result": true, "stroke_count": 10, "onyomi": ["\u30ab\u30f3"], "kunyomi": ["\u304a\u3061\u3044.\u308b", "\u304a\u3068\u3057\u3044.\u308c\u308b"], "nanori": [], "meanings": ["collapse", "fall into", "cave in", "fall (castle)", "slide into"], "frequency_rank": 1418, "grade": 8, "jlpt": 1, "kanken": 2.5, "primitives": ["\u961c", "\u52f9", "\u65e7"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1315, "heisig_id6": 1412, "heisig_keyword5": "collapse", "heisig_keyword6": "collapse", "heisig_story": "Pinnacle . . . bound up . . . olden times.", "heisig_comment": null, "radicals": ["\uff5c", "\u65e5", "\u52f9", "\u2ed6"], "words_default": [["\u9665\u308b", "\u304a\u3061\u3044\u308b"], ["\u9665\u308c\u308b", "\u304a\u3068\u3057\u3044\u308c\u308b"], ["\u6b20\u9665", "\u3051\u3063\u304b\u3093"], ["\u9665\u843d", "\u304b\u3093\u3089\u304f"], ["\u9665\u6ca1", "\u304b\u3093\u307c\u3064"], ["\u5931\u9665", "\u3057\u3063\u304b\u3093"]], "koohi_stories": ["1) [dihutenosa] 19-9-2007(223): The Pinnacle is actually bound up by supports from olden times. Eventually, they give out, and the whole thing starts to collapse.", "2) [dwhitman] 19-12-2007(91): The Pinnacle is supported by pilings which were bound up in olden times. One day when the bindings rot away, the whole thing will collapse. (tweaking dihutensoa's story to work a little better for me).", "3) [jameserb] 6-8-2008(40): At the pinnacle of any society's development, being overly bound to rules from olden times leads to collapse (see Jared Diamond's Collapse).", "4) [nest0r] 24-1-2008(24): The adventurers reached the pinnacle, and claimed the artefact which had been bound up since olden times: the staff of the Sun God. But as soon as they removed it, the place began to collapse! Will they make it out in time??", "5) [genevere] 25-4-2009(11): The collapse of the pinnacle society occurred after they were bound up in olden times beliefs and practices and thereby failed to progress."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u9694", "has_result": true, "stroke_count": 13, "onyomi": ["\u30ab\u30af"], "kunyomi": ["\u3078\u3060.\u3066\u308b", "\u3078\u3060.\u305f\u308b"], "nanori": [], "meanings": ["isolate", "alternate", "distance", "separate", "gulf"], "frequency_rank": 1449, "grade": 8, "jlpt": 1, "kanken": 3, "primitives": ["\u961c", "\u9b32"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1312, "heisig_id6": 1409, "heisig_keyword5": "isolate", "heisig_keyword6": "isolate", "heisig_story": "<i>Pinnacle</i> . . . <i>ceiling</i> . . . <i>mouth</i> . . . <i>glass canopy</i> . . . <i>human legs</i> . . . <i>spike</i>. You might want to compare the kanji for <i>dissolve</i> (Frame 1123).", "heisig_comment": null, "radicals": ["\u4e00", "\u53e3", "\u513f", "\u5182", "\u2ed6", "\u9b32"], "words_default": [["\u9694\u96e2", "\u304b\u304f\u308a"], ["\u9593\u9694", "\u304b\u3093\u304b\u304f"], ["\u9060\u9694", "\u3048\u3093\u304b\u304f"], ["\u9694\u58c1", "\u304b\u304f\u3078\u304d"], ["\u9694\u3066\u308b", "\u3078\u3060\u3066\u308b"], ["\u9694\u819c", "\u304b\u304f\u307e\u304f"]], "koohi_stories": ["1) [Nuriko] 5-3-2008(113): The Pinnacle, to me, is a city that makes itself out to be perfect but is filled with dirty secrets that photographers are always trying to reveal (see dissolve (#1044 \u878d) The city's councilmen have isolated all professional photographers to make sure they don't photograph these 'dirty secrets'. (which are up to your imagination).", "2) [stehr] 24-10-2007(97): The people of the pinnacle isolate themselves, dissolving any outside friendships.", "3) [playadom] 20-6-2008(77): Sadly, since the Pinnacle is isolated, they have no modern technology. Their only means of photography is an old camera. What's that? Forgot how old cameras work? Let me show you: Light is captured through the lens (one mouth), the photographer is in a giant hood, all you can see out of it are his human legs. He holds his flash controller(a spike) in hand.", "4) [shimouma] 23-6-2008(21): Imagine the landscape photographer, like Ansel Adams, isolated and alone at the pinancle taking pictures with his camera. (See zenkun's story for (FRAME 1044) dissolve).", "5) [Peppi] 6-10-2009(18): Do you remember the poor insect in dissolve (#1044 \u878d)? Actually, it was not dissolved - it was beamed right into the pinnacle prison for committing the crime of disturbing a photographer preparing for a snapshot and now lives isolated until the end of its three days long life\u2026 (note: \u9694\u3066\u308b (\u3078\u3060\u3066\u308b) also means to disturb ones view)."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u963b", "has_result": true, "stroke_count": 8, "onyomi": ["\u30bd"], "kunyomi": ["\u306f\u3070.\u3080"], "nanori": [], "meanings": ["thwart", "separate from", "prevent", "obstruct", "deter", "impede"], "frequency_rank": 1451, "grade": 8, "jlpt": 1, "kanken": 3, "primitives": ["\u961c", "\u4e14"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1780, "heisig_id6": 1919, "heisig_keyword5": "thwart", "heisig_keyword6": "thwart", "heisig_story": "Pinnacle . . . shelf.", "heisig_comment": null, "radicals": ["\u4e00", "\u76ee", "\u2ed6"], "words_default": [["\u963b\u6b62", "\u305d\u3057"], ["\u963b\u3080", "\u306f\u3070\u3080"], ["\u963b\u5bb3", "\u305d\u304c\u3044"], ["\u963b\u3081\u308b", "\u306f\u3070\u3080"], ["\u963b\u3057", "\u3046\u3058\u306f\u3084\u3044"], ["\u963b\u585e", "\u305d\u305d\u304f"]], "koohi_stories": ["1) [dingomick] 25-12-2007(201): In a last ditch effort to thwart the invaders of The Pinnacle, they push glass shelves over the edge onto their heads below.", "2) [raulir] 30-12-2006(69): The shortness of the Japanese thwarts their attempts to reach the topmost (pinnacle) shelf without grabbing a chair.", "3) [tristanthorn] 18-3-2009(26): The Pinnacle keeps its pantry shelves locked at nighttime, to thwart midnight snackers. No fatties allowed here!", "4) [mantixen] 10-7-2009(16): Keeping porn on the pinnacle of a bookshelf can thwart snooping kids (thanks bodhisamaya).", "5) [bihzad] 1-5-2008(12): To thwart attacks on the Pinnacle, their shelves are always full of various magical weapons."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u9699", "has_result": true, "stroke_count": 13, "onyomi": ["\u30b2\u30ad", "\u30ad\u30e3\u30af", "\u30b1\u30ad"], "kunyomi": ["\u3059\u304d", "\u3059.\u304f", "\u3059.\u304b\u3059", "\u3072\u307e"], "nanori": [], "meanings": ["crevice", "fissure", "discord", "opportunity", "leisure"], "frequency_rank": 1470, "grade": 8, "jlpt": null, "kanken": 2, "primitives": ["\u961c", "\u5c0f", "\u65e5", "\u5c0f"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 2426, "heisig_id6": 1394, "heisig_keyword5": "chink", "heisig_keyword6": "chink", "heisig_story": "<i>Pinnacle</i> . . . <i>little</i> . . . <i>sun</i> . . . <i>little</i>. Note that the form of the first element for <i>little</i> given here is the simpler form that has become standard in general-use characters (See Frame 110). For the time being, until typesetting fonts have made the adjustment, the official approved drawing has the drops similar to the bottom <i>little</i>.", "heisig_comment": null, "radicals": ["\u5c0f", "\u65e5", "\u2ed6"], "words_default": [["\u9699", "\u3059\u304d"], ["\u9699\u9593", "\u3059\u304d\u307e"], ["\u9699", "\u3072\u307e"], ["\u7a7a\u9699", "\u304f\u3046\u3052\u304d"], ["\u9593\u9699", "\u304b\u3093\u3052\u304d"], ["\u9699\u898b", "\u3059\u304d\u307f"]], "koohi_stories": ["1) [to_nihon] 11-1-2009(68): They won't let me in The Pinnacle, but I can see a little bit of sun through this little chink in the wall. Hmm, maybe I could make this chink bigger\u2026", "2) [steves] 3-10-2007(46): There was only one chink in his plan. Even standing atop the highest pinnacle, standing above even the sun, the little man was still just as little as when he was under the sun.", "3) [ikmys] 5-6-2007(18): Man those little chinks can do anything! They were the first to build rockets, and by launching one off the top of the highest pinnacle in China, one little chink was the first to ride above the sun, and see all the little chinks below!", "4) [Megaqwerty] 19-6-2007(4): In a wall at The Pinnacle, there must be a chink in the wall because I see some small rays of sunlight peepin' through, up there and down there.", "5) [Peppi] 16-9-2009(3): Daedalus, a talented craftsman, attempted to escape from his exile, where he and his son Icarus were imprisoned. Daedalus fashioned two pairs of wings out of wax and feathers for himself and his son (you can see them flying in the sky, they are very small) However, Icarus did not listen to his father warning and flew too high - even above the sun! The wax melted and the wings got chinks. The end of this old story? Icarus crashed onto the pinnacles (small variation of the original story)\u2026"], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u962a", "has_result": true, "stroke_count": 7, "onyomi": ["\u30cf\u30f3"], "kunyomi": ["\u3055\u304b"], "nanori": [], "meanings": ["heights", "slope"], "frequency_rank": 1669, "grade": 4, "jlpt": 3, "kanken": 2, "primitives": ["\u961c", "\u53cd"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1294, "heisig_id6": 1390, "heisig_keyword5": "Heights", "heisig_keyword6": "Heights", "heisig_story": "pinnacle This key word has been chosen because of its connotation of \"the highest point,\" thereby suggesting the image of the highest point in a village, that is, a hill or mountain on which sacred or festive events take place. If you have a clear image of the Athenian acropolis, you might use it to express this element for a pinnacle. Note that this primitive appears only on the left. On the right, as we shall see later, the same form takes a different meaning. [3]", "heisig_comment": null, "radicals": ["\u53c8", "\u5382", "\u2ed6"], "words_default": [["\u962a", "\u3055\u304b"], ["\u540d\u962a", "\u3081\u3044\u306f\u3093"]], "koohi_stories": ["1) [dingomick] 27-8-2007(260): If you're scared of Heights, you don't want to stay at The Pinnacle; you are anti- The Pinnacle. Primitive: The Pinnacle is a dream-like gated community at the top of a mount. This allows for innumerable stories for all the kanji with this primitive since you have a whole city to work with. Also prevents confusion with 'mountain'.", "2) [wasurenaide] 6-12-2007(47): People are being displaced in \u5927\u962a to make room for a new development, Osaka Heights, the pinnacle of modern Japanese housing. An angry mob of protestors are outside with Anti-Osaka Heights signs.", "3) [cefreddffo] 25-9-2009(23): This kanji is only used in names and in 'Osaka'. By chance, last week my japanese friend told me that it used to be \u5927\u5742 (as in 'slope'), but Hideyoshi, the Taiko, didnt want to have anything to do with 'land' (his ascendance were farmers\u2026) so he replaced the 'earth' for what we call 'pinnacle'.\u3000Its true. RTK2:\u3000\u30cf\u30f3 \u962a\u795e \u306f\u3093\u3057\u3093(Osaka and Kobe)\u2026 MIXED GROUP: \u53cd 722 \u5742 723 \u677f 724 \u8ca9 726 \u7248 1213 \u98ef 1473\u3000(\uff8d\uff9d): \u8fd4 725\u3000(\uff76): \u4eee 966.", "4) [decamer0n] 17-5-2007(19): Just by changing the soil in slope (#723 \u5742) to a pinnacle you get to the Heights. If only reaching the top of Everest were this easy\u2026", "5) [Johnnyltn] 23-9-2006(10): Hint: Try naming the primitive pinnacle 'The Pinnacle'. Giving it a place name sort of sets the image firmly in mind. 'The Pinnacle' can then become a large facility set on a pinnacle overlooking a city or valley or whatever of your choice. In this facility are many functions such as restaruants, sports areas, rooms, halls etc. which can eventually be used in forming kanji in the future."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u966a", "has_result": true, "stroke_count": 11, "onyomi": ["\u30d0\u30a4"], "kunyomi": [], "nanori": [], "meanings": ["obeisance", "follow", "accompany", "attend on"], "frequency_rank": 1710, "grade": 8, "jlpt": 1, "kanken": 3, "primitives": ["\u961c", "\u7acb", "\u53e3"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1299, "heisig_id6": 1396, "heisig_keyword5": "auxiliary", "heisig_keyword6": "auxiliary", "heisig_story": "Pinnacle . . . muzzle.", "heisig_comment": null, "radicals": ["\u53e3", "\u7acb", "\u2ed6"], "words_default": [["\u966a\u5be9", "\u3070\u3044\u3057\u3093"], ["\u966a\u5e2d", "\u3070\u3044\u305b\u304d"]], "koohi_stories": ["1) [PacifistGod] 22-7-2007(169): In case of emergency, The Pinnacle has auxiliary guard dogs, but they keep them muzzeled until they're needed.", "2) [meolox] 18-1-2008(102): When you climb the pinnacle you'll need to take a muzzle of auxiliary oxygen.", "3) [Kieron] 31-3-2008(70): Make sure you've got the primitives and ordering down, so as to avoid confusion with \u90e8 section (#1845 \u90e8) later on.", "4) [unauthorized] 5-12-2009(48): Hint: This is a very rarely used kanji and the only relatively common word that contain it is \u966a\u5be9 \u300c\u3070\u3044\u3057\u3093\u300d (meaning jury, juryman). I recommend using one of these meanings as a keyword, since you are not going to see it anywhere else unless you intend to read historic novels. [Trivia: The other meaning of this kanji is something in the spirit of subordinate. Look it up on wwwjdic if you are curious.].", "5) [rtkrtk] 12-1-2008(28): When I see auxiliary I think of the 'AUX' input on an amplifier. Imagine a PA system being used at a protest event outside the gates of The Pinnacle. The protester shouts into his PA system to get the attention of the decadent residents of The Pinnacle. The guardsman of The Pinnacle silences (muzzles) the protester by unplugging his microphone from the auxiliary jack of his amplifier. (Similar scene in Forrest Gump)."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u9685", "has_result": true, "stroke_count": 12, "onyomi": ["\u30b0\u30a6"], "kunyomi": ["\u3059\u307f"], "nanori": [], "meanings": ["corner", "nook"], "frequency_rank": 1716, "grade": 8, "jlpt": 2, "kanken": 2.5, "primitives": ["\u961c", "\u79ba"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1958, "heisig_id6": 2108, "heisig_keyword5": "corner", "heisig_keyword6": "corner", "heisig_story": "Pinnacle . . . Talking Cricket.", "heisig_comment": null, "radicals": ["\u7530", "\u65e5", "\u5182", "\u53b6", "\u79b8", "\u2ed6"], "words_default": [["\u9685", "\u3059\u307f"], ["\u9685\u3005", "\u3059\u307f\u305a\u307f"], ["\u7247\u9685", "\u304b\u305f\u3059\u307f"], ["\u9685\u3063\u3053", "\u3059\u307f\u3063\u3053"], ["\u56db\u9685", "\u3088\u3059\u307f"], ["\u53f3\u9685", "\u307f\u304e\u3059\u307f"]], "koohi_stories": ["1) [dingomick] 26-4-2007(153): Jiminy Cricket has a favorite corner he likes to slip into at The Pinnacle for a long drink.", "2) [Angrybeez] 20-5-2008(51): Oh how the pious fall from their lofty pinnacles! Jiminy Cricket now deals drugs on the street corner.", "3) [zanzibar] 3-5-2009(38): If you behave badly at THE PINNACLE, JIMINY CRICKET will send you to sit in the corner.", "4) [Harrow] 8-8-2010(17): Long-tailed monkeys are showing up in every nook and corner of the Acropolis. Thanks to laxxy for the following distinction: \u9685\u3005\u30fb\u306b \u300c\u3059\u307f\u305a\u307f\u30fb\u306b\u300d\uff1a '(in) every n0ok and corner', vs. \u89d2 \u300c\u304b\u3069\u300d for 'street corner, desk corner, etc.'.", "5) [Zactacular] 8-10-2007(10): In the corner of the Acropolis lives the famous sooth sayer Jiminy Cricket, who people from all over come to visit to hear their fortune."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u9686", "has_result": true, "stroke_count": 11, "onyomi": ["\u30ea\u30e5\u30a6"], "kunyomi": [], "nanori": ["\u304a", "\u305f\u304b", "\u305f\u304b\u3057"], "meanings": ["hump", "high", "noble", "prosperity"], "frequency_rank": 1782, "grade": 8, "jlpt": 1, "kanken": 3, "primitives": ["\u961c", "\u5902", "\u751f"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1561, "heisig_id6": 1682, "heisig_keyword5": "hump", "heisig_keyword6": "hump", "heisig_story": "This character, used for everything from little <b>humps</b> of hills to camel <b>humps</b>, easily suggests the hunch on the pig's back and hind parts where the best cuts of meat are to be found (and hence the English expression for luxury, \"living high off the hog.\") The elements we have to work with are: <i>pinnacle</i> . . . <i>walking legs</i> . . . <i>cell</i>.", "heisig_comment": null, "radicals": ["\u751f", "\u5902", "\u2ed6"], "words_default": [["\u9686\u8d77", "\u308a\u3085\u3046\u304d"], ["\u9686\u3005", "\u308a\u3085\u3046\u308a\u3085\u3046"], ["\u9686\u76db", "\u308a\u3085\u3046\u305b\u3044"], ["\u9686\u7dda", "\u308a\u3085\u3046\u305b\u3093"], ["\u81a8\u9686", "\u307c\u3046\u308a\u3085\u3046"], ["\u8208\u9686", "\u3053\u3046\u308a\u3085\u3046"]], "koohi_stories": ["1) [jamiemw] 25-9-2007(186): You are struggling to the top across the humps, but you suddenly see the pinnacle and you feel new life in your walking legs.", "2) [Raichu] 14-4-2007(51): A woman takes her bra off and what happens? Nine months later the hump in her belly pops out between her legs as a new life.", "3) [blackstockc] 16-1-2008(43): I climbed to the pinnacle with my girlfriend and we immediately got to making life between her legs (humping).", "4) [Ramchip] 23-7-2008(31): The Pinnacle, this perfect place, did have one person with a hump on his back. Poor guy spent his whole life aimlessly walking around the Pinnacle, without finding anyone to relate to.", "5) [rtkrtk] 24-1-2008(31): The hump of a camel is actually a separate animal resting on top of the camel. It has its own walking legs and its own life. These animals are great as pets but are very expensive. A resident of The Pinnacle has bought one of the expensive pets - a hump with walking legs and a life of its own - and is walking it home from the pet store."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u5815", "has_result": true, "stroke_count": 11, "onyomi": ["\u30c0"], "kunyomi": ["\u304a.\u3061\u308b", "\u304f\u305a.\u3059", "\u304f\u305a.\u308c\u308b"], "nanori": [], "meanings": ["degenerate", "descend to", "lapse into"], "frequency_rank": 1834, "grade": 8, "jlpt": 1, "kanken": 2.5, "primitives": ["\u961c", "\u6709", "\u571f"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1314, "heisig_id6": 1411, "heisig_keyword5": "degenerate", "heisig_keyword6": "degenerate", "heisig_story": "Pinnacle . . . possess . . . ground.", "heisig_comment": null, "radicals": ["\u30ce", "\u4e00", "\u6708", "\u571f", "\u2ed6"], "words_default": [["\u5815\u843d", "\u3060\u3089\u304f"], ["\u5815", "\u3060"], ["\u5815\u3061\u308b", "\u304a\u3061\u308b"], ["\u5815\u5929", "\u3060\u3066\u3093"], ["\u5815\u308d\u3059", "\u304a\u308d\u3059"], ["\u5815\u80ce", "\u3060\u305f\u3044"]], "koohi_stories": ["1) [mcfate] 26-9-2007(145): Any attempt to possess the pinnacle will degenerate into a land ('ground') war.", "2) [dingomick] 27-8-2007(102): A degenerate doctor at The Pinnacle is doing illegal abortions. He's so sick he just throws the aborted fetuses onto the ground far below. And like a possess demon, he keeps some tied to his side on a belt as trophies.", "3) [esaulgd] 11-1-2008(97): The Pinnacle has degenerated into an group that just tries to possess as much soil as possible.", "4) [penot] 11-11-2008(60): The Pinnacle of the Roman Empire (as with many other empires since) degenerated as they just tried to possess more &amp; more land. ' like . . . . . . duh!('\u30c0') ' // \u304a.\u3061\u308b / \u30c0 duo4 \ud0c0 (ta) \ud734 (hyu).", "5) [tristanthorn] 18-3-2009(16): The Pinnacle possesses class and sophistication. By contrast, the land (soil) below is degenerate, and unrefined."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u9673", "has_result": true, "stroke_count": 11, "onyomi": ["\u30c1\u30f3"], "kunyomi": ["\u3072.\u306d\u308b"], "nanori": ["\u306e\u3076"], "meanings": ["exhibit", "state", "relate", "explain"], "frequency_rank": 1879, "grade": 8, "jlpt": 1, "kanken": 3, "primitives": ["\u961c", "\u6771"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1301, "heisig_id6": 1398, "heisig_keyword5": "line up", "heisig_keyword6": "line up", "heisig_story": "Pinnacle . . . east.", "heisig_comment": null, "radicals": ["\uff5c", "\u4e00", "\u7530", "\u65e5", "\u6728", "\u2ed6"], "words_default": [["\u9673\u8150", "\u3061\u3093\u3077"], ["\u9673\u8ff0", "\u3061\u3093\u3058\u3085\u3064"], ["\u9673\u60c5", "\u3061\u3093\u3058\u3087\u3046"], ["\u9673\u5217", "\u3061\u3093\u308c\u3064"], ["\u65b0\u9673", "\u3057\u3093\u3061\u3093"], ["\u9673\u8b1d", "\u3061\u3093\u3057\u3083"]], "koohi_stories": ["1) [dingomick] 5-2-2007(167): Every morning at The Pinnacle, the residents line upon the East side for morning stretches and leisure.", "2) [kadano] 16-4-2009(62): Hikers line up to get to the top of that great pinnacle of the East\u2026 Mount Fuji. Seriously, they really do! \u2026probably the only mountain in the world with a queue at the top.", "3) [snallygaster] 26-2-2008(25): Modified dingomick's: Every morning the pinnacle's workers line up on the East side for inspection by the pinnacle's boss.", "4) [Spidercat] 14-3-2008(21): At the pinnacle of your studies, you'll be able to exhibit your knowledge of the kanji : these characters from the east.", "5) [typosensei] 18-3-2010(16): This is not 'people in a line'. This is 'a line up' like a line up of shows or performers. @gavmck At The Pinnacle they are having an exhibition of Oriental art where you can see all kinds of amazing artifacts lined up."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u9675", "has_result": true, "stroke_count": 11, "onyomi": ["\u30ea\u30e7\u30a6"], "kunyomi": ["\u307f\u3055\u3055\u304e"], "nanori": [], "meanings": ["mausoleum", "imperial tomb", "mound", "hill"], "frequency_rank": 1916, "grade": 8, "jlpt": 1, "kanken": 3, "primitives": ["\u961c", "\u5725", "\u5902"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1518, "heisig_id6": 1636, "heisig_keyword5": "mausoleum", "heisig_keyword6": "mausoleum", "heisig_story": "Pinnacle . . . rice seedlings . . . walking legs.", "heisig_comment": null, "radicals": ["\u571f", "\u513f", "\u5902", "\u2ed6"], "words_default": [["\u9675", "\u308a\u3087\u3046"], ["\u4e18\u9675", "\u304d\u3085\u3046\u308a\u3087\u3046"], ["\u9675\u8fb1", "\u308a\u3087\u3046\u3058\u3087\u304f"], ["\u738b\u9675", "\u304a\u3046\u308a\u3087\u3046"], ["\u9675", "\u307f\u3055\u3055\u304e"], ["\u5357\u9675", "\u306a\u3093\u308a\u3087\u3046"]], "koohi_stories": ["1) [fiminor] 11-4-2006(191): land (#1513 \u9678) However, the pinnacle that the rice-seedlings finally reach with the use of their walking legs turns out not to be the Promised Land after all, but simply a mausoleum (containing many dead rice-seedlings exhausted from previous quests?). Oh no!", "2) [dingomick] 2-9-2007(61): On top of The Pinnacle is a masoleum for rice seedling farmers. They make an annual walking pilgrimage there.", "3) [bananarama] 2-3-2008(36): At the pinnicle is a mausolem. The ground is sown with rice seedings to stop the dead from rising on walking legs.", "4) [mattimus] 29-10-2009(25): Every year, thousands walk up The Pinnacle to see the Mushroom Mausoleum. It's shaped like a mushroom, surrounded by mushrooms, and supposedly Toad is enshrined inside (he died in a fiery Rainbow Road accident).", "5) [elmaestrokgb] 31-10-2009(11): Ancient Japanese built a mausoleum for the 'unknown rice farmer'. It's on the pinnacle of Mt. Fuji, and it has a statue of a guy with huge walking legs planting rice seedlings as he goes."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u9676", "has_result": true, "stroke_count": 11, "onyomi": ["\u30c8\u30a6"], "kunyomi": ["\u3059\u3048"], "nanori": ["\u3059"], "meanings": ["pottery", "porcelain"], "frequency_rank": 2012, "grade": 8, "jlpt": 1, "kanken": 3, "primitives": ["\u961c", "\u52f9", "\u7f36"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1966, "heisig_id6": 2117, "heisig_keyword5": "pottery", "heisig_keyword6": "pottery", "heisig_story": "Pinnacle . . . bound up . . . tin can.", "heisig_comment": null, "radicals": ["\u7f36", "\u52f9", "\u2ed6"], "words_default": [["\u9676\u5668", "\u3068\u3046\u304d"], ["\u9676\u82b8", "\u3068\u3046\u3052\u3044"], ["\u9676", "\u3068\u3046"], ["\u9676\u9154", "\u3068\u3046\u3059\u3044"], ["\u9676\u78c1\u5668", "\u3068\u3046\u3058\u304d"], ["\u9676\u5de5", "\u3068\u3046\u3053\u3046"]], "koohi_stories": ["1) [radical_tyro] 20-7-2007(145): At The Pinnacle, traditional pottery is done by binding up a bunch of tin cans into whatever pot shape desired.", "2) [Zactacular] 8-10-2007(54): In order the get clay up to the Acropolis for the pottery class, clay is packed into tin cans, bound in huge loads, and lugged up there by some unfortunate soul.", "3) [dukelexon] 11-3-2008(45): Pottery is an obsolete art up in the super-modern Utopia of The Pinnacle \u2026 instead, they bind up everything they need to preserve in high-tech tin cans.", "4) [jamiemw] 11-10-2007(24): At The Pinnacle they refuse to use tin cans and so they have been bound up, they will only use pottery.", "5) [fuaburisu] 7-1-2006(22): This chinese man was making the best china pottery in all of \u2026 China. For some reason he insisted on working at the top of a pinnacle, away from the distractions of the world. He kept in touch with the local people, and took orders, through bound tin cans (tin cans bound with rope, the children's version of the telephone)."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}, {"character": "\u9644", "has_result": true, "stroke_count": 8, "onyomi": ["\u30d5"], "kunyomi": ["\u3064.\u3051\u308b", "\u3064.\u304f"], "nanori": ["\u305a\u304d", "\u3065\u3051"], "meanings": ["affixed", "attach", "refer to", "append"], "frequency_rank": 2531, "grade": 8, "jlpt": 1, "kanken": 2.5, "primitives": ["\u961c", "\u4ed8"], "primitive_of": [], "primitive_keywords": [], "primitive_alternatives": [], "heisig_id5": 1303, "heisig_id6": 1400, "heisig_keyword5": "affixed", "heisig_keyword6": "affixed", "heisig_story": "Pinnacle . . . adhere.", "heisig_comment": null, "radicals": ["\u2e85", "\u5bf8", "\u2ed6"], "words_default": [["\u9644\u5c5e", "\u3075\u305e\u304f"], ["\u9644\u5b50", "\u3076\u3057"], ["\u9644", "\u3075"], ["\u898b\u9644", "\u307f\u3064\u3051"], ["\u5bc4\u9644", "\u304d\u3075"], ["\u9644\u7b8b", "\u3075\u305b\u3093"]], "koohi_stories": ["1) [ruuku35] 12-6-2006(153): A sign was AFFIXED on the PINNACLE of the Acropolis so that tourists would ADHERE to the rules.", "2) [xentropic] 27-7-2008(68): Signs are affixed to walls in The Pinnacle to ensure tourists adhere to the rules.", "3) [dingomick] 27-8-2007(60): The Pinnacle is firmly affixed to the top of the mount with bubble gum. (adhere (#1000 \u4ed8)).", "4) [Meconium] 1-6-2009(14): At The Pinnacle, they use the best quality glue to make sure things adhere properly. If you see a sign adhered to the wall of The Pinnacle, don't bother trying to steal it - it's firmly affixed.", "5) [haole] 15-2-2010(10): Being affixed is really the pinnacle of adherence."], "usr_keyword": null, "usr_primitive_keyword": null, "usr_story": null}]}' %}
